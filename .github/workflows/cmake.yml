name: CMake

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  TEST_JOBS: 30

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: ${{ matrix.generator }} ${{ matrix.compiler }} ${{ matrix.build_type }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        compiler: [clang++-17]
        generator: [Ninja]
        build_type: [Debug, Release]
        include:
          - build_type: Debug
            enable_werror: ON
          - build_type: Release
            enable_werror: OFF

    steps:
      - name: Checkout repo and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install clang-17
        run: wget https://apt.llvm.org/llvm.sh && \
          chmod u+x llvm.sh && \
          sudo ./llvm.sh 17 && \
          sudo apt install clang-17 libc++-17-dev libc++abi-17-dev

      - name: Install Ninja
        if: ${{ matrix.generator == 'Ninja' }}
        run: sudo apt install ninja-build

      - name: Install GTests
        run: sudo apt-get install libgtest-dev

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: |
          cmake -B ${{github.workspace}}/build \
            -G="${{matrix.generator}}" \
            -DCMAKE_CXX_COMPILER=${{matrix.compiler}} \
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
            -DENABLE_WERROR=${{matrix.enable_werror}} \
            -DSKIP_CLANG_FORMAT=ON \
            -DBUILD_TESTS=ON
      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} -j

      - name: Unit tests
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{matrix.build_type}} -VV -j ${{env.TEST_JOBS}} -L unit

      - name: Test app run
        working-directory: ${{github.workspace}}/bulid/bin
        run: ./solver
